---
- name: a few basic filters
  hosts: localhost
  gather_facts: no

  vars:
          jarlist: [1,1,1,1,1,5]
          repeatlist: [1,2,2,2,4,4,4,4,9,9,9,9]
          repeat2list: [5,5,5,5,5,6,7]
          complexlist: [6,7,8,9,[10,22,55],87]
          test_list:
                  - '192.168.2.1'
                  - '10.0.0.1'
                  - 'host.example.org'
                  - '192.168.70.0/24'
                  - 'fe80::100/10'
                  - 'The Witcher3 The Wild Hunt'
                  - 'True'
          mytest_string: "uss enterprise"
          myaddresses: ['192.168.2.101', '10.0.3.50', '171.172.32.1']

  tasks:
          - name: the min filter
            debug:
                    msg: "Show me the largest number in the list: '{{ jarlist|min }}'"

          - name: the flatten filter
            debug:
                    msg: "flatten a list: '{{ complexlist|flatten }}'"

          - name: grab the unique set from a list
            debug:
                    msg: "the unique values are: '{{ repeatlist|unique }}'"

          - name: show the diffs of two list
            debug:
                    msg: "the diffs are: '{{ repeatlist|difference(repeat2list) }}'"

          - name: snooze our ansible script
            pause:
                    seconds: "{{ sleeptime|default(10) }}"

          - name: I just want IP addresses
            debug:
                    msg: "{{ test_list | ipaddr }}"

          - name: Spawn a Mac
            debug:
                    msg: "{{'52:54:00' | random_mac}}"

          - name: Test if a variable ends in prise
            debug:
                    msg: "ahhh but is it A B C or D???"
            when: mytest_string.endswith('prise')

          - name: show capitalize with jinja
            debug:
                    var: mytest_string | capitalize

          - name: show capitalize with python
            debug:
                    var: mytest_string.capitalize()

          - name: show address that match our scope
            debug:
                    msg: "{{ (myaddresses|ipaddr('10.0.0.0/8'))[0].split('.')[3] }}"
